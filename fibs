#!/bin/bash

function usage {
    echo "Usage: $0 n"
}

case $# in
1 ) case $1 in
    '' | *[!0-9]* ) usage >&2 ; exit 2 ;;
    * ) let n=$1 ;;
    esac ;;
* ) usage >&2 ; exit 2 ;;
esac

function row {
    local offset=$((2 * $1))
    local a=(${!2})

    for i in 0 1
    do
        echo ${a[i + offset]}
    done
}

function col {
    local offset=$1
    local a=(${!2})

    for j in 0 2
    do
        echo ${a[j + offset]}
    done
}

function dot {
    local a=(${!1})
    local b=(${!2})

    let dot=0
    for i in 0 1
    do
        let dot=$((dot + a[i] * b[i]))
    done
    echo $dot
}

function mult {
    local a=(${!1})
    local b=(${!2})

    for i in 0 1
    do
        row=($(row $i a[@]))
        for j in 0 1
        do
            col=($(col $j b[@]))
            dot row[@] col[@]
        done
    done
}

function format {
    local a=(${!1})
    local f0
    printf -v f0 "%'d" ${a[1]}
    local len0=${#f0}
    local f1
    printf -v f1 "%'d" ${a[3]}
    local len1=${#f1}

    printf "[%'${len0}d %'${len1}d\n %'${len0}d %'${len1}d]\n" ${a[@]}
}

fib0=(0 1 1 1)
format fib0[@]
fibn=(${fib0[@]})
for n in $(seq 1 $1)
do
    fibn=($(mult fibn[@] fib0[@]))
    format fibn[@]
done
